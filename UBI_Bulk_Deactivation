import subprocess
import time
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.common.by import By
from selenium.webdriver.common.alert import Alert
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC

# Step 1: Start Chrome in Debugging Mode (if not already running)
chrome_path = r"C:\Program Files\Google\Chrome\Application\chrome.exe"
debugging_port = "9222"

subprocess.Popen(
    [chrome_path, f"--remote-debugging-port={debugging_port}", "--user-data-dir=C:\\SeleniumProfile"],
    shell=True,
)

# Step 2: Wait a few seconds for Chrome to launch
time.sleep(5)

# Step 3: Connect Selenium to the existing Chrome session
options = webdriver.ChromeOptions()
options.debugger_address = f"localhost:{debugging_port}"  # Attach to existing Chrome

# Start WebDriver without launching a new Chrome instance
driver = webdriver.Chrome(options=options)

try:
    # Step 4: Ensure we're on the correct page
    driver.get("https://epay.unionbankofindia.co.in/kvsfcs/")

    # Wait for user to complete login
    print("üîÑ Waiting for user to log in...")

    WebDriverWait(driver, 120).until(
        EC.presence_of_element_located((By.ID, "ContentPlaceHolder1_GVList"))  # Modify as needed
    )

    print("‚úÖ Login detected. Waiting for navigation to 'StudListClass.aspx'...")

    # Step 5: Wait until user navigates to "StudListClass.aspx"
    WebDriverWait(driver, 180).until(
        EC.url_contains("StudListClass.aspx")
    )
    print("‚úÖ User has navigated to 'StudListClass.aspx'.")

    # Step 6: Wait for the "Deactivate All Students" button
    print("üîÑ Waiting for action on 'ContentPlaceHolder1_ImgbtnSearch'...")

    WebDriverWait(driver, 180).until(
        EC.presence_of_element_located((By.ID, "ContentPlaceHolder1_ImgbtnSearch"))
    )
    
    # Step 7: Ask for confirmation in the browser
    driver.execute_script("window.confirm('‚ö†Ô∏è Do you want to deactivate all students? Click OK to proceed.');")

    # Detect user's response
    confirm_button = driver.switch_to.alert
    confirm_text = confirm_button.text
    print(f"üîî Alert Message: {confirm_text}")

    if "deactivate" in confirm_text.lower():
        confirm_button.accept()  # Click "OK"
        print("‚úÖ User confirmed. Proceeding with deactivation...")

        # Step 8: Click the deactivate button
        deactivate_button = driver.find_element(By.ID, "ContentPlaceHolder1_ImgbtnSearch")
        deactivate_button.click()
        print("‚úÖ Deactivation process started.")
    else:
        confirm_button.dismiss()  # Click "Cancel"
        print("‚ùå Action canceled by user.")

except Exception as e:
    print("‚ùå Error:", e)

finally:
    print("‚úÖ Script completed.")
